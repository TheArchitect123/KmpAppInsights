name: Deploy to Maven Central

on:
  push:
    branches:
      - main  # Trigger deployment only on the main branch

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: macos-latest  # Use macOS for iOS builds
    env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Xcode Command Line Tools
        run: |
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
          xcodebuild -version

      # Step 3: Import GPG key (securely)
      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          gpg --list-secret-keys --keyid-format LONG > /dev/null

      # Step 4: Configure Maven settings (securely)
      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF
      
      - name: Verify Maven settings
        run: ls -la ~/.m2

      # # Step 6: Build and Verify Artifacts
      # - name: Build and verify artifacts
      #   run: |
      #     ./gradlew clean assemble --no-configuration-cache
      #     ./gradlew :shared:linkReleaseFrameworkIosArm64
      #     ./gradlew :shared:linkReleaseFrameworkIosSimulatorArm64
      #     ./gradlew publishToMavenLocal --no-configuration-cache --info --stacktrace

      # Step 7: Publish to Maven Central
      - name: Publish to Maven Central
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache --info --stacktrace